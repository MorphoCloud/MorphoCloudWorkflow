name: "Extract issue fields"
description: "Extract issue fields"
inputs:
  token:
    description: "GITHUB_TOKEN or repo scoped PAT"
    required: true
  repository:
    description: "The full name of the repository in which the issue exists"
    required: true
  issue_number:
    description: "Issue number identifying the issue to extract fields from"
    required: true
outputs:
  instance_flavor:
    description: "Instance flavor"
    value: ${{ steps.extract.outputs.instance_flavor }}
  email:
    description: "Email"
    value: ${{ steps.extract.outputs.email }}
runs:
  using: "composite"
  steps:
    - name: Fetch the issue
      id: read_issue_body
      shell: bash
      run: |
        body=$(gh issue view ${{ inputs.issue_number }} \
          --repo ${{ inputs.repository }} \
          --json body | \
          jq '.body')
        echo "body=$body" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Issue Forms Body Parser
      id: parse
      uses: zentered/issue-forms-body-parser@v2.2.0
      with:
        body: ${{ steps.read_issue_body.output.body }}

    - name: Display parsed data
      shell: bash
      run: |
        echo ${{ toJSON(steps.parse.outputs.data) }} | jq .

    - name: Extract fields
      id: extract
      shell: bash
      run: |
        instance_flavor=$(echo ${{ toJSON(steps.parse.outputs.data) }} | \
            jq -r '."cloud-computing-instance-flavor".text | split(" - ")[0]')
        echo "instance_flavor [$instance_flavor]"
        echo "instance_flavor=$instance_flavor" >> $GITHUB_OUTPUT

        email=$(
          echo ${{ toJSON(steps.parse.outputs.data) }} |
          jq -r ".email.text"
        )
        echo "email=$email" >> $GITHUB_OUTPUT
