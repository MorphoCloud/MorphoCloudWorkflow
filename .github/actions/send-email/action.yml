name: "Send email"
description: "Send email with instance connection details"
inputs:
  os_cloud:
    description:
      "Name of the OpenStack cloud allocation to select openstack auth settings
      defined in '.config/openstack/clouds.yaml'"
    required: true
  token:
    description: "GITHUB_TOKEN or repo scoped PAT"
    required: true
  string_encryption_key:
    description: "Encryption key to encode and decode the email address"
    required: true
  mail_server_username:
    description: "mail server username"
    required: true
  mail_server_password:
    description: "mail server password"
    required: true
  instance_name:
    description: "Name of the instance to connect to"
    required: true
  instance_issue_number:
    description: "Reference of the GitHub issue associated with the instance"
    required: true
outputs:
  error_message:
    description: "Error message describing which steps failed"
    value: ${{ steps.set_error_message.outputs.error_message }}
runs:
  using: "composite"
  steps:
    - name: Extract fields
      id: extract
      uses: ./.github/actions/extract-issue-fields
      with:
        token: ${{ inputs.token }}
        repository: ${{ github.repository }}
        issue_number: ${{ inputs.instance_issue_number }}

    - name: Retrieve metadata
      id: instance_metadata
      uses: ./.github/actions/retrieve-metadata
      with:
        os_cloud: ${{ inputs.os_cloud }}
        instance_name: ${{ inputs.instance_name }}

    - name: Generate Guacamole Connection URL
      if: ${{ steps.instance_poll.outputs.status == 'complete' }}
      id: guacamole
      uses: ./.github/actions/generate-connection-url
      with:
        instance_ip: ${{ steps.instance_metadata.outputs.instance_ip }}

    - name: Check if email is encoded
      id: check_email_encryption
      shell: bash
      run: |
        if [[ "$EMAIL" != *"@"* ]]; then
          encoded="true"
        else
          encoded="false"
        fi
        echo "encoded=$encoded" >> $GITHUB_OUTPUT
      env:
        EMAIL: ${{ steps.extract.outputs.email }}

    - name: Decode email
      id: decode_email
      uses: ./.github/actions/encode-decode-string
      with:
        input_string: ${{ steps.extract.outputs.email }}
        encryption_key: ${{ inputs.string_encryption_key }}
        operation: "decode"
        skip: ${{ steps.check_email_encryption.outputs.encoded == 'false' }}

    - name: Send mail
      uses: dawidd6/action-send-mail@2cea9617b09d79a095af21254fbcb7ae95903dde # v3.12.0
      with:
        server_address: smtp.gmail.com
        server_port: 465
        secure: true
        username: ${{ inputs.mail_server_username }}
        password: ${{ inputs.mail_server_password }}
        from: MorphoCloudPortal
        to: ${{ steps.decode_email.outputs.output_string }}
        subject:
          "[${{ github.event.repository.name }}] Instance ${{
          inputs.instance_name }} active"
        convert_markdown: true
        html_body: |
          Your MorphoCloud instance is up and running:

          * **Graphical User Interface (GUI)**: Use the weblink provided below to access your instance.
          * **Command Line Access**: Use the SSH information provided below to access your instance
          from the command line.

          In both cases, username is **exouser** and the passphrase is provided.

          **Important Notes:**

          - Each session is limited to 4h, after which your instance is automatically shelved.
          - To unshelve an existing instance, use the`/unshelve` command.
          - To shelve an instance and preserve your allocation, use the `/shelve` command.
          - To obtain the latest set of access credentials, use the `/email` command.
          - Commands should be added as comments to issue [${{ github.repository }}#${{ inputs.instance_issue_number }}](https://github.com/${{ github.repository }}/issues/${{ inputs.instance_issue_number }})

          If you have questions, please contact [morphocloud@outlook.com](mailto:morphocloud@outlook.com).

          **Connection Methods:**

          - Web connect: ${{ steps.guacamole.outputs.connection_url }}
          - SSH: `ssh exouser@${{ steps.instance_metadata.outputs.instance_ip }}`

          **Credentials:**

          - Username: **exouser**
          - Passphrase: `${{ steps.instance_metadata.outputs.instance_pwd }}`

          **Supported Issue Commands:**

          _The commands described below may be added as issue comments. Only one command
          may be entered per comment._

          | Command         | Description                                        | Who                  |
          | --------------- | -------------------------------------------------- | -------------------- |
          | `/shelve`       | Shelve the instance.                               | Issue creator, Admin |
          | `/unshelve`     | Unshelve the instance.                             | Issue creator, Admin |
          | `/encode_email` | Update issue description obfuscating email.        | Issue creator, Admin |
          | `/decode_email` | Update issue description deobfuscating email.      | Issue creator, Admin |
          | `/email`        | Send email to _Issue creator_ with connection URL. | Issue creator, Admin |
          | `/create`       | Create the instance.                               | Admin                |
          | `/delete`       | Delete the instance.                               | Admin                |

    - name: Set error message
      id: set_error_message
      if: ${{ failure() }}
      shell: bash
      run: |
        if [[ $INSTANCE_METADATA_OUTCOME == "failure" ]]; then
          error_message="Failed to retrieve metadata"
        elif [[ $GUACAMOLE_OUTCOME == "failure" ]]; then
          error_message="Failed to generate connection URL"
        fi
        echo "error_message=$error_message" >> $GITHUB_OUTPUT
      env:
        # Step outcome
        INSTANCE_METADATA_OUTCOME: ${{ steps.instance_metadata.outcome }}
        GUACAMOLE_OUTCOME: ${{ steps.guacamole.outcome }}
