name: Create Instance

on:
  issue_comment:
    types: [created]

jobs:
  create:
    runs-on: self-hosted
    if:
      ${{ !github.event.issue.pull_request && (
      contains(github.event.comment.body, '/create') ) }}
    steps:
      - name: create command
        id: create_command
        uses: github/command@v2.0.2
        with:
          command: "/create"
          reaction: "rocket"
          allowed_contexts: "issue"
          permissions: "read,triage,write,maintain,admin"
          allowlist:
            "${{ vars.MORPHOCLOUD_GITHUB_ADMINS }},${{
            github.event.issue.user.login }}"

      - uses: actions/checkout@v5

      - name:
          Convenienty add "request:approved" label if comment added by an admin
        uses: actions/github-script@v8
        with:
          script: |
            const admins = process.env.MORPHOCLOUD_GITHUB_ADMINS.split(',').map(s => s.trim());
            const actor = context.payload.comment.user.login;
            if (admins.includes(actor)) {
              await github.rest.issues.addLabels({
                issue_number: context.payload.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ["request:approved"]
              });
            } else {
              core.info(`${actor} is not in the list of admins`);
            }
        env:
          MORPHOCLOUD_GITHUB_ADMINS: ${{ vars.MORPHOCLOUD_GITHUB_ADMINS }}

      - name: Create instance
        uses: ./.github/actions/create-instance
        with:
          os_cloud: ${{ vars.MORPHOCLOUD_OS_CLOUD }}
          issue_number: ${{ github.event.issue.number }}
          instance_name_prefix: ${{ vars.INSTANCE_NAME_PREFIX }}
          volume_name_suffix: ${{ vars.VOLUME_NAME_SUFFIX }}
          token: ${{ secrets.GITHUB_TOKEN }}
          string_encryption_key: ${{ secrets.STRING_ENCRYPTION_KEY }}
          mail_server_username: ${{secrets.MAIL_USERNAME}}
          mail_server_password: ${{secrets.MAIL_PASSWORD}}
