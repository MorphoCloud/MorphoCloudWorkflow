name: Control Instance

on:
  issue_comment:
    types: [created]

# Permissions needed for reacting to IssueOps commands on issues
permissions:
  issues: write
  checks: read

jobs:
  control:
    runs-on: self-hosted
    if:
      ${{ !github.event.issue.pull_request && (
      contains(github.event.comment.body, '/start') ||
      contains(github.event.comment.body, '/stop') ) }}
    steps:
      - name: start command
        id: start_command
        uses: github/command@v1.2.0
        with:
          command: "/start"
          reaction: "rocket"
          allowed_contexts: "issue"
          permissions: "read,triage,write,maintain,admin"
          allowlist: "jcfr,muratmaga,${{ github.event.issue.user.login }}"

      - name: stop command
        id: stop_command
        uses: github/command@v1.2.0
        with:
          command: "/stop"
          reaction: "rocket"
          allowed_contexts: "issue"
          permissions: "read,triage,write,maintain,admin"
          allowlist: "jcfr,muratmaga,${{ github.event.issue.user.login }}"

      - name: Set command metadata
        id: command
        if:
          ${{ steps.start_command.outputs.continue == 'true' ||
          steps.stop_command.outputs.continue == 'true' }}
        run: |
          if [[ "$START_COMMAND_CONTINUE" == "true" ]]; then
            continue="$START_COMMAND_CONTINUE"
            command_name="start"
            comment_id="${{ steps.start_command.outputs.comment_id }}"
          elif [[ "$STOP_COMMAND_CONTINUE" == "true"  ]]; then
            continue="$STOP_COMMAND_CONTINUE"
            command_name="stop"
            comment_id="${{ steps.stop_command.outputs.comment_id }}"
          else
            continue="false"
            command_name=""
            comment_id=""
          fi
          echo "continue=$continue" >> $GITHUB_OUTPUT
          echo "command_name=$command_name" >> $GITHUB_OUTPUT
          echo "comment_id=$comment_id$" >> $GITHUB_OUTPUT
        env:
          START_COMMAND_CONTINUE: ${{ steps.start_command.outputs.continue }}
          STOP_COMMAND_CONTINUE: ${{ steps.stop_command.outputs.continue }}

      - name: Define instance name
        id: define
        uses: ./.github/actions/define-instance-name
        with:
          issue_number: ${{ github.event.issue.number }}

      - name: Check instance exists
        id: check_instance
        if: ${{ steps.command.outputs.continue == 'true' }}
        uses: ./.github/actions/check-instance-exists
        with:
          instance_name: ${{ steps.define.outputs.instance_name }}

      - name: command results comment (Instance does not exist)
        if:
          ${{ steps.command.outputs.continue == 'true' &&
          steps.check_instance.outputs.exists == 'false' }}
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Command Results ❌

            `${{ steps.command.outputs.command_name }}` command failed because **${{ steps.define.outputs.instance_name }}** instance does not exist.

      - name: Execute command
        if:
          ${{ steps.command.outputs.continue == 'true' &&
          steps.check_instance.outputs.exists == 'true' }}
        run: |
          export OS_CLOUD=BIO180006_IU # Select openstack auth settings defined in ".config/openstack/clouds.yaml"

          source ~/venv/bin/activate

          OS_CLOUD=BIO180006_IU openstack server $COMMAND_NAME "$INSTANCE_NAME"
        env:
          INSTANCE_NAME: ${{ steps.define.outputs.instance_name }}
          COMMAND_NAME: ${{ steps.command.outputs.command_name }}

      - name: command results comment (success)
        if:
          ${{ steps.command.outputs.continue == 'true' &&
          steps.check_instance.outputs.exists == 'true' && success() }}
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Command Results ✅

            `${{ steps.command.outputs.command_name }}` command successfully applied to **${{ steps.define.outputs.instance_name }}** instance.

      - name: command results comment (failure)
        if:
          ${{ steps.command.outputs.continue == 'true' &&
          steps.check_instance.outputs.exists == 'true' && failure() }}
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Command Results ❌

            `${{ steps.command.outputs.command_name }}` command failed to applied to **${{ steps.define.outputs.instance_name }}** instance.
            See details at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
